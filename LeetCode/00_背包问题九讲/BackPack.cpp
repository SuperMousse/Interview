/*
例题一、01背包问题
假设山洞里共有a,b,c,d ,e这5件宝物（不是5种宝物），它们的重量分别是2,2,6,5,4，
它们的价值分别是6,3,5,4,6，现在给你个承重为10的背包, 怎么装背包，可以才能带走最多的财富。

i  name weight value | j: 1   2   3   4   5   6   7   8   9   10
1   a     4     6    |    0   0   0   6   6   6   6   6   6   6
2   b     5     4    |    0   0   0   *   6   6   6   6   10  10
3   c     6     5    |    0   0   0   *   *   6   6   6   10  11
4   d     2     3    |    0   3 	3   6 	6   9 	9  	9 	10 	11
5   e     2     6    |    0   6 	6   9 	9   12  12 	15 	15 	15

// 二维动态规划, f[i, j]表示到第i个宝物为止, 使用j大小的背包所获得的财富
for i in [1, 5]:
  for j in [W_i, 10]:
    // j in [1, 10] and j-W_i >= 0
    f[i, j] = max(f[i-1, j], f[i-1, j-W_i]+V_i)

f[1, 4]  = max(f[0, 4], f[0, 0]+V_1) = max(0, 0+6) = 6
f[1, 5]  = max(f[0, 5], f[0, 1]+V_1) = max(0, 0+6) = 6
f[1, 6]  = max(f[0, 6], f[0, 2]+V_1) = max(0, 0+6) = 6
f[1, 7]  = max(f[0, 7], f[0, 3]+V_1) = max(0, 0+6) = 6
f[1, 8]  = max(f[0, 8], f[0, 4]+V_1) = max(0, 0+6) = 6
f[1, 9]  = max(f[0, 9], f[0, 5]+V_1) = max(0, 0+6) = 6
f[1, 10] = max(f[0, 10], f[0, 6]+V_1) = max(0, 0+6) = 6

f[2, 5]  = max(f[1, 5], f[1, 0]+V_2) = max(6, 0+4) = 6
f[2, 6]  = max(f[1, 6], f[1, 1]+V_2) = max(6, 0+4) = 6
f[2, 7]  = max(f[1, 7], f[1, 2]+V_2) = max(6, 0+4) = 6
f[2, 8]  = max(f[1, 8], f[1, 3]+V_2) = max(6, 0+4) = 6
f[2, 9]  = max(f[1, 9], f[1, 4]+V_2) = max(6, 6+4) = 10
f[2, 10] = max(f[1, 10], f[1, 5]+V_2) = max(6, 6+4) = 10


f[3, 6]  = max(f[2, 6], f[2, 0]+V_3) = max(6, 0+5) = 6
f[3, 7]  = max(f[2, 7], f[2, 1]+V_3) = max(6, 0+5) = 6
f[3, 8]  = max(f[2, 8], f[2, 2]+V_3) = max(6, 0+5) = 6
f[3, 9]  = max(f[2, 9], f[2, 3]+V_3) = max(10, 0+5) = 6
f[3, 10] = max(f[2, 10], f[2, 4]+V_3) = max(10, 0+5) = 6


*/
